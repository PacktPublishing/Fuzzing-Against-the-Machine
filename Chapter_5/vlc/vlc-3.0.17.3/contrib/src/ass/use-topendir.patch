--- a/libass/ass_fontselect.c.orig	2021-09-11 23:27:04.000000000 +0200
+++ b/libass/ass_fontselect.c	2021-12-29 17:18:47.535670604 +0100
@@ -47,6 +47,9 @@
 #include "ass_font.h"
 #include "ass_string.h"
 
+#include <windows.h>
+#include <tchar.h>
+
 #define ABS(x) ((x) < 0 ? -(x) : (x))
 #define MAX_FULLNAME 100
 
@@ -166,21 +169,55 @@
     .destroy_font      = destroy_font_ft,
 };
 
+#ifdef _WIN32
+static inline char *FromWide (const wchar_t *wide)
+{
+    size_t len = WideCharToMultiByte (CP_UTF8, 0, wide, -1, NULL, 0, NULL, NULL);
+    if (len == 0)
+        return NULL;
+
+    char *out = (char *)malloc (len);
+
+    if (out)
+        WideCharToMultiByte (CP_UTF8, 0, wide, -1, out, len, NULL, NULL);
+    return out;
+}
+
+static inline wchar_t *ToWide (const char *utf8)
+{
+    int len = MultiByteToWideChar (CP_UTF8, 0, utf8, -1, NULL, 0);
+    if (len == 0)
+        return NULL;
+
+    wchar_t *out = (wchar_t *)malloc (len * sizeof (wchar_t));
+
+    if (out)
+        MultiByteToWideChar (CP_UTF8, 0, utf8, -1, out, len);
+    return out;
+}
+#endif
+
 static void load_fonts_from_dir(ASS_Library *library, const char *dir)
 {
-    DIR *d = opendir(dir);
+    wchar_t *dirw = ToWide(dir);
+    _TDIR *d = _topendir(dirw);
+    free(dirw);
     if (!d)
         return;
     size_t dirlen = strlen(dir);
     size_t namemax = 0;
     char *namebuf = NULL;
     while (1) {
-        struct dirent *entry = readdir(d);
+        struct _tdirent *entry = _treaddir(d);
         if (!entry)
             break;
+        char* d_name = FromWide(entry->d_name);
         if (entry->d_name[0] == '.')
+        {
+            free(d_name);
             continue;
-        size_t namelen = dirlen + strlen(entry->d_name) + 2u;
+        }
+        size_t namelen = dirlen + strlen(d_name) + 2u;
         if (namelen < 2 || namelen - 2 < dirlen)
             continue;
         if (namelen > namemax) {
@@ -190,17 +227,18 @@
             else
                 continue;
         }
-        snprintf(namebuf, namemax, "%s/%s", dir, entry->d_name);
+        _snprintf(namebuf, namemax, "%s/%s", dir, d_name);
         size_t bufsize = 0;
         ass_msg(library, MSGL_INFO, "Loading font file '%s'", namebuf);
         void *data = read_file(library, namebuf, &bufsize);
         if (data) {
-            ass_add_font(library, entry->d_name, data, bufsize);
+            ass_add_font(library, d_name, data, bufsize);
             free(data);
         }
+        free(d_name);
     }
     free(namebuf);
-    closedir(d);
+    _tclosedir(d);
 }
 
 /**
